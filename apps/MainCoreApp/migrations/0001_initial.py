# Generated by Django 2.1.5 on 2019-02-14 19:00

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('com_username', models.CharField(max_length=30, verbose_name='名字')),
                ('com_content', models.TextField(max_length=150, verbose_name='评论内容')),
                ('com_make_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '文章评论',
                'verbose_name_plural': '文章评论',
            },
        ),
        migrations.CreateModel(
            name='ArticlesMake',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cover', models.ImageField(blank=True, default='article/default/default.jpg', null=True, upload_to='article/image', verbose_name='封面')),
                ('title', models.CharField(default='暂无', max_length=50, verbose_name='标题')),
                ('introduction', models.TextField(blank=True, max_length=300, null=True, verbose_name='简介')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='内容')),
                ('like_num', models.IntegerField(default=0, verbose_name='喜欢数')),
                ('read_num', models.IntegerField(default=0, verbose_name='阅读数')),
                ('article_brief_time', models.DateField(auto_now_add=True, verbose_name='完成时间(简洁)')),
                ('article_modify_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('article_make_time', models.DateTimeField(auto_now_add=True, verbose_name='完成时间')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('is_top', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('is_banner', models.BooleanField(default=False, verbose_name='是否在首页顶部')),
            ],
            options={
                'verbose_name': '编写文章',
                'verbose_name_plural': '编写文章',
            },
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=10, verbose_name='标签名')),
            ],
            options={
                'verbose_name': '文章标签',
                'verbose_name_plural': '文章标签',
            },
        ),
        migrations.CreateModel(
            name='ArticleType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=15, verbose_name='类型名称')),
            ],
            options={
                'verbose_name': '文章类型',
                'verbose_name_plural': '文章类型',
            },
        ),
        migrations.CreateModel(
            name='BlogBaseSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_name', models.CharField(default='我的个人博客', max_length=10, verbose_name='博客头部名称')),
                ('blog_foot_content', models.CharField(default='© 2017 Comply Theme. A Free Bootstrap 4 product landing page theme by Wired Dots.', max_length=100, verbose_name='博客底部内容')),
            ],
            options={
                'verbose_name': '博客全局设置',
                'verbose_name_plural': '博客全局设置',
            },
        ),
        migrations.CreateModel(
            name='BlogNavSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nav_name', models.CharField(default='首页', max_length=4, verbose_name='导航名')),
                ('nav_url', models.CharField(default='/', max_length=200, verbose_name='绑定 url')),
                ('nav_sort', models.IntegerField(default=1, verbose_name='排序(数字越小越左)')),
                ('nav_articles_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainCoreApp.ArticleType', verbose_name='绑定文章类型作为URL')),
            ],
            options={
                'verbose_name': '博客导航栏设置',
                'verbose_name_plural': '博客导航栏设置',
            },
        ),
        migrations.CreateModel(
            name='FriendshipLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('link_name', models.CharField(max_length=25, verbose_name='链接名')),
                ('link_url', models.URLField(verbose_name='友链')),
            ],
            options={
                'verbose_name': '友情链接',
                'verbose_name_plural': '友情链接',
            },
        ),
        migrations.CreateModel(
            name='StromInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='article/default/default.jpg', null=True, upload_to='coreuser/image', verbose_name='头像')),
                ('name', models.CharField(default='暂无', max_length=10, verbose_name='名字')),
                ('major', models.CharField(default='暂无', max_length=20, verbose_name='职业')),
                ('phone', models.CharField(default='暂无', max_length=18, verbose_name='电话')),
                ('email', models.EmailField(default='xxx@qq.com', max_length=254, verbose_name='邮箱')),
                ('wx', models.ImageField(blank=True, default='article/default/default.jpg', null=True, upload_to='coreuser/image', verbose_name='微信')),
            ],
            options={
                'verbose_name': '站主信息',
                'verbose_name_plural': '站主信息',
            },
        ),
        migrations.AddField(
            model_name='articlesmake',
            name='article_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MainCoreApp_ArticlesMake_related', to='MainCoreApp.StromInfo', verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='articlesmake',
            name='article_tags',
            field=models.ManyToManyField(blank=True, null=True, related_name='MainCoreApp_ArticlesMake_related', to='MainCoreApp.ArticleTag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='articlesmake',
            name='article_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MainCoreApp_ArticlesMake_related', to='MainCoreApp.ArticleType', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='com_article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MainCoreApp_ArticleCommend_relateds', to='MainCoreApp.ArticlesMake', verbose_name='评论的文章'),
        ),
    ]
